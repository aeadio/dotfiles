#!/usr/bin/env zsh

info() {
  print $1 >&2
}

app_dirs=(
  ${XDG_DATA_HOME:-$HOME/.local/share}/applications(N)
  ${~${(@s,:,)${XDG_DATA_DIRS:-/usr/local/share:/usr/share}}/%//applications(N)}
)

typeset -A apps=()
typeset -A appnames=()

for dir in $app_dirs; do
  for desktop_file in $dir/*.desktop(N); do
    if [[ ! -r $desktop_file ]] continue
    
    desktop_file=$desktop_file:t
    
    if (( $+apps[$desktop_file] )); then
      info "skipping $desktop_file from $dir: shadowed by $apps[$desktop_file]"
      continue
    fi
    
    info "adding $desktop_file from $dir"
    apps[$desktop_file]=$dir
  done
done

# Instances of .desktop files in a high-priority directory should completely
# shadow those found in lower-priority directories. Therefore, we need to first 
# collate all .desktop entries before performing filtering. For instance, if a 
# copy in $XDG_DATA_HOME sets NoDisplay=true, but the system-wide one does not,
# we must still exclude it from the list.
for filename in ${(k)apps}; do
  dir=$apps[$filename]
  desktop_file=$dir/$filename
  
  sed -n 's/^\([[:alnum:]]*\)=\([[:alnum:]]*\).*/\1 \2/p' $desktop_file |
    while read -r key val; do
      case $key in
        Type)
          if [[ $val != (Application|) ]]; then
            info "removing $filename from $dir: unknown/unsupported type: $type"
            unset 'apps['$filename']'
            break
          fi
          ;;
        NoDisplay)
          if [[ $val == true ]]; then
            info "removing $filename from $dir: NoDisplay is set"
            unset 'apps['$filename']'
            break
          fi
          ;;
        Hidden)
          if [[ $val == true ]]; then
            info "removing $filename from $dir: Hidden is set"
            unset 'apps['$filename']'
            break
          fi
          ;;
        Name)
          appnames[$key]=$val
          ;;
      esac
    done
done

for filename in ${(ki)apps}; do
  dir=$apps[$filename]
  desktop_file=$dir/$filename
  print -f '%s %s\n' $desktop_file ${appnames[$filename]:-$filename:r}
done
