#!/bin/sh

float=
# This is roughly the size of a terminal in our standard desktop configuration:
# - 4K screen
# - Screen divided into 4 columns (with i3 gaps)
# - Rightmost column contains 3 terminals vertically
float_width=112
float_height=32
interactive=
command=

OPTIND=0
while getopts "s:fie:" opt; do
  case $opt in
    s)
      float_width=${OPTARG%x*}
      float_height=${OPTARG#*x}
      ;;
    f)
      float=1
      ;;
    i)
      interactive=1
      ;;
    e)
      # -e must be the last parameter, if given. The remaining parameters are
      # assumed to belong to the child command within the spawned terminal.
      command="$OPTARG"
      shift $(( OPTIND - 1 ))
      OPTIND=1
      break
      ;;
  esac
done
shift $(( OPTIND - 1 ))

if [ -z "$command" ] && [ -n "$1" ]; then
  command="$1"
  shift
fi

if [ -n "$command" ]; then
  # If we have zshi available, try to launch the target command through it.
  # This gives us an enclosing interactive shell session, which we drop into if 
  # we quit the application, rather than the terminal closing.
  if [ "$interactive" ] && command -v zshi >/dev/null 2>/dev/null; then
    # zshi introduces additional levels of shell depth to achieve its trickery,
    # and our Zsh config tries to display _effective_ shell depth to the user
    # so we can tell if we've, eg, entered zsh->ranger->zsh->ranger multiple 
    # times by mistake. So we'll start off with a SHLVL offset that ends up 
    # with our enclosing shell at SHLVL=1.
    : ${SHLVL:=1}
    set -- '-e' 'env' "SHLVL=$(( SHLVL - 1 ))" 'zshi' "$command $*"
  else
    set -- '-e' "$command" "$@"
  fi
fi

# If we've set -f, we should get a floating terminal. Setting the WMCLASS 
# instance to begin with "floating" will signal to i3's configured rules to 
# float the window.
instance="${float:+floating/}${command:-alacritty}"

alacritty \
  --class alacritty,"$instance" \
  ${float:+-o window.dimensions.columns=$float_width} \
  ${float:+-o window.dimensions.lines=$float_height}  \
  "$@"
