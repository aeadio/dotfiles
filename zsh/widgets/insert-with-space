# vim: ft=sh ts=2 sw=2 et:

# Inserts text into the buffer, prepending and appending a space only if
# necessary. If -b is given, the cursor is left at the beginning of the word.
# Otherwise, it is left at the end.

emulate -L zsh

local before
if [[ $1 == '-b' ]]; then
  before=1
  shift
fi

# Duplicate the character just before/after our target position, and blank it
# out if it's a valid delimeter (such as whitespace, quotes, semicolon). If it
# wasn't blanked out, then replace it with a space.
if (( ${#LBUFFER} )) typeset -g LBUFFER="$LBUFFER${${LBUFFER[-1]:#[[:space:]=\"\'\(\{]}:+ }"
if (( ${#RBUFFER} )) typeset -g RBUFFER="${${RBUFFER[1]:#[[:space:];\"\'\)\}]}:+ }$RBUFFER"

if (( before )); then
  typeset -g RBUFFER="$1$RBUFFER"
else
  typeset -g LBUFFER="$LBUFFER$1"
fi
