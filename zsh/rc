#!/usr/bin/env zsh
# vim: ft=sh ts=2 sw=2 et:

# NOTE: This file (and rc.d/, etc) contain zsh-specific configuration.
# Environment exports are primarily found in profile.d/*.

export ZSH=$CONF/zsh

if [[ ! -d $ZSH ]]; then
  print "Warning: zsh config directory not found: $ZSH"
  return
fi

# Some utility functions we'll use throughout rc.d and first party plugins.
quiet() {
  # If we're not connected to a terminal, then don't suppress stdout -- so that
  # quiet can be used inside pipelines without wrapping the whole thing.
  if [[ -t 1 ]]; then
    "$@" &>/dev/null
  else
    "$@" 2>/dev/null
  fi
}

has() {
  (( $+commands[$1] ))
}

isgnu() {
  has $1 && quiet $1 --version | grep -q GNU
}

# Plugins
# Plain (executable) files in zsh/plugins/ are first-party plugins -- mine.
# Directories are third-party plugins (if they contain a .plugin.zh file), and 
# are expected to be installed as Git submodules. See zsh/functions/zp for 
# installation wrapper.
() {
  local f
  for f in $ZSH/plugins/*(-.e:'[[ -x $REPLY ]]':N); . $f  # first party plugins
  for f in $ZSH/plugins/*/*.plugin.zsh(-.N);        . $f  # third party plugins
}

# User functions
# All first-party function definitions (but not bodies) are autoloaded
if [[ -d $ZSH/functions ]]; then
  fpath=($ZSH/functions $fpath)  # prepend to prefer ours over vendor's
  autoload -Uz $ZSH/functions/*(.:t)
fi

# zshrc.d
# Primary place for zsh config. Load last so that it may make use of plugins.
() {
  local f
  for f in $ZSH/rc.d/*(e:'[[ -x $REPLY ]]':N); . $f
}
