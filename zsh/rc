# vim: ft=sh ts=2 sw=2 et:

# NOTE: This file (and rc.d/, etc) contain zsh-specific configuration.
# Environment exports are primarily found in profile.d/*.

export ZSH=$CONF/zsh

if [[ ! -d $ZSH ]]; then
  print "Warning: zsh config directory not found: $ZSH"
  return
fi

# pre.d
# Bootstrap config to be run before anything else is loaded. Ie, make sure
# compinit is initialized before plugins that hook it.
() {
  local f
  for f in $ZSH/pre.d/*(e:'[[ -x $REPLY ]]':onN); . $f
}

# Plugins
# Plain (executable) files in zsh/plugins/ are first-party plugins -- mine.
# Directories are third-party plugins (if they contain a .plugin.zsh file). See
# zsh/functions/zp* for installation helper.
() {
  # NOTE: Run each plugin within clean options. Do not make it sticky, as
  # plugin functions should have the ability to respond to our chosen options.
  local f
  for f in $ZSH/plugins/*(-.e:'[[ -x $REPLY ]]':onN); . $f  # 1st party plugins
  for f in $ZSH/plugins/*/*.plugin.zsh(-.onN);        . $f  # 3rd party plugins
}

# User functions
# All first-party function definitions (but not bodies) are autoloaded
if [[ -d $ZSH/functions ]]; then
  fpath=($ZSH/functions $fpath)  # prepend to prefer ours over vendor's
  autoload -z $ZSH/functions/*(.:t)
fi

# User ZLE widgets
if [[ -d $ZSH/widgets ]]; then
  fpath=($ZSH/widgets $fpath)
  local f
  for f in $ZSH/widgets/*(-.N:t); do
    autoload -z $f
    zle -N $f
  done
fi

# zshrc.d
# Primary place for zsh config. Load last so that it may make use of plugins.
() {
  local f
  for f in $ZSH/rc.d/*(e:'[[ -x $REPLY ]]':onN); . $f
}
