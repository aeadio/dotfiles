# vim: ft=sh ts=2 sw=2 et:
emulate -L zsh

local force=0

if (( ! $# )); then
  >&2 <<< "usage: zp-add <giturl> [<giturl>...]"
  return
fi

if [[ $1 == -f ]]; then
  force=1
  shift
fi

if (( ! $+commands[git] )); then
  >&2 <<< "fatal: requires git"
  return
fi

if [[ -z $ZSH || ! -d $ZSH ]]; then
  >&2 <<< "error: zsh config directory not found: $ZSH"
  return
fi

local plugindir=$ZSH/plugins
mkdir -p $plugindir

(
  if ! cd $plugindir; then
    >&2 <<< "fatal: could not enter plugin directory."
    return 1
  fi
  unset GIT_DIR GIT_WORK_TREE GIT_INDEX_FILE GIT_OBJECT_DIRECTORY \
    GIT_ALTERNATE_OBJECT_DIRECTORIES
  
  local changed=()
  local repo name
  for repo in "$@"; do
    [[ -z "$repo" ]] && continue
    name=${repo:t:r}
    if [[ -e $name ]]; then
      >&2 <<< "warning: plugin $name exists, skipping..."
      continue
    fi
    git submodule add ${force:+--force} $repo $name
    if (( $? )); then
      >&2 <<< "error: failed to install plugin $name"
      [[ -e $name ]] && rm -i -r $name
      continue
    fi
    changed+=( $name )
  done
  
  if (( $#changed )); then
    git commit -m "zsh: Add plugins ${(pj:, :)changed}" --only $changed
  fi
)
