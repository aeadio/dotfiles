# vim: ft=sh ts=2 sw=2 et:

emulate -L zsh -o extended_glob

local force=
local commit=1
local instname

OPTIND=0
while getopts "fna:" opt; do
  case "$opt" in
    f) force=1 ;;
    n) commit= ;;
    a)
      instname="$OPTARG"
      ;;
  esac
done
shift $(( OPTIND - 1 ))

if (( ! $# )); then
  print "usage: zp-add <giturl> [<giturl>...]" >&2
  return
fi

if (( ! $+commands[git] )); then
  print "fatal: requires git" >&2
  return
fi

if [[ -z $ZSH || ! -d $ZSH ]]; then
  print "error: zsh config directory not found: $ZSH" >&2
  return
fi

local plugindir=$ZSH/plugins
mkdir -p $plugindir

(
  if ! cd $plugindir; then
    print "fatal: could not enter plugin directory." >&2
    return 1
  fi
  unset GIT_DIR GIT_WORK_TREE GIT_INDEX_FILE GIT_OBJECT_DIRECTORY \
    GIT_ALTERNATE_OBJECT_DIRECTORIES
  
  local list=( "$@" )
  if (( ${#list} > 1 )) && [[ -n $instname ]]; then
    print "fatal: can only install one plugin as name $instname" >&2
    return
  fi
  
  local changed=()
  local repo name f
  for repo in $list; do
    [[ -z "$repo" ]] && continue
    name=${repo:t:r}
    print -P "%B%F{blue}Adding plugin $name from $repo%f%b"
    if [[ -e $name ]] && (( ! force )); then
      print -P "%B%F{blue}-> Plugin $name exists, skipping%f%b"
      print " "
      continue
    fi
    git submodule add ${force:+--force} $repo ${instname:-$name}
    if (( $? )); then
      print -P "%B%F{red}-> Plugin $name failed to install%f%b"
      print " "
      [[ -e $name ]] && rm -i -r $name
      continue
    fi
    changed+=( $name )
    print " "
  done
  
  if (( ${#changed} )); then
    local gitroot=$(git rev-parse --show-toplevel)
    print -P "%B%F{blue}${#changed} plugins added%f%b"
    if (( commit )); then
      print -P "%B%F{blue}Committing changes...%f%b"
      git commit -m "zsh: Remove plugins ${(pj:, :)changed}" \
        --only $changed $gitroot/.gitmodules
    fi
  fi
)
